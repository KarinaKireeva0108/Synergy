class Cherепашка:
    def __init__(self, x=0, y=0, s=1):
        self.x = x  # Текущая позиция по оси x
        self.y = y  # Текущая позиция по оси y
        self.s = s  # Количество клеточек, на которое она перемещается за ход
    def go_up(self):
        """Увеличивает y на s"""
        self.y += self.s
    def go_down(self):
        """Уменьшает y на s"""
        self.y -= self.s
    def go_left(self):
        """Уменьшает x на s"""
        self.x -= self.s
    def go_right(self):
        """Увеличивает x на s"""
        self.x += self.s
    def evolve(self):
        """Увеличивает s на 1"""
        self.s += 1
    def degrade(self):
        """Уменьшает s на 1 или выкидывает ошибку, когда s может стать ≤ 0"""
        if self.s > 1:
            self.s -= 1
        else:
            raise ValueError("s не может быть меньше или равно 0!")
    def count_moves(self, x2, y2):
        """Возвращает минимальное количество действий для достижения (x2, y2)"""
        distance_x = abs(x2 - self.x)
        distance_y = abs(y2 - self.y)
                # Минимальное количество ходов - это максимальное количество шагов по x и по y,
        # деленное на количество клеточек, которые черепашка может пройти за один ход (s)
        moves_x = (distance_x + self.s - 1) // self.s  # Округление вверх
        moves_y = (distance_y + self.s - 1) // self.s  # Округление вверх
                return max(moves_x, moves_y)
